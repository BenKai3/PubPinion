<html>
<head>
	<title>PubPinion - Home</title>
	<link rel="stylesheet" type="text/css" href="/stylesheets/style.css">
	<link rel="stylesheet" type="text/css" href="/stylesheets/style2.css">
	 <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.9/angular.min.js"></script>
	 <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.5/angular-route.min.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>    
	<script src="/socket.io/socket.io.js"></script>


</head>
<body>
	<div ng-app='pubpinion'>

		<div id="menu">
			<button><a href="#/" id="home_button">?ubPinion</a></button>
			<button><a href="#/myPub" id="myPub">My?ub</a></button>
			<div id="errors" style="color:red"></div>
		</div>

		<div ng-view=""></div>

	</div>
	<script type="text/javascript">
		io = io.connect();
		var pubpinion = angular.module('pubpinion', ['ngRoute']);

		//EXPRESS.IO
		io.on('successful_login', function(){
    			console.log('successful_login');
    			$('#errors').unbind().html();
    			// var user_name = 
    	});
		io.on('failed_reg', function(err){
			console.log('ERRORS', err);
			if(typeof(err) != 'undefined'){
				for(var x in err.error.errors){
					$('#errors').unbind().append("<p>"+err.error.errors[x].message+"</p>");
				};
			};
	    });
	    io.on('failed_login', function(fail_message){
	    	$('#errors').unbind().html("<p>"+fail_message.fail_message+"</p>");
	    	console.log(fail_message);
	    });
		//END EXPRESS.IO

		//ROUTES
		pubpinion.config(function($routeProvider){
			$routeProvider
			.when('/', 
				{templateUrl: '/partials/home.html', controller: 'pubpinController'})
			.when('/post_question', 
				{templateUrl: '/partials/post_question.html', controller: 'pubpinController'})
			.when('/myPub', 
				{templateUrl: '/partials/myPub.html', controller: 'pubpinController'})
			.when('/myQuestions', 
				{templateUrl: '/partials/myQuestions.html', controller: 'pubpinController'})
		});
		
		// CONTROLLERS
		pubpinion.controller('pubpinController', function($scope){

			//JQUERY
			var loaded = false;
			$(document).ready(function(){
				if(loaded === false){
					loaded = true;
					first_setup();
				}
	    		
	    	});
			function first_setup(){
			
	    		$('#post_question').click(function(){

	    		});

	    		$('#question_button').unbind().click(function(){
	    			$('#login_reg').unbind().slideToggle();
	    			$('#question_button').unbind().fadeOut();
	    		});

	    		$('#login_button').unbind().click(function(){
	    			io.emit('login', { email: $('#login_email').val(), password: $('#login_password').val() });
	    			console.log('login_button was clicked: ');
	    		});

	    		$('#reg_button').unbind().on('click', function(){
	    			console.log('reg_button was clicked: ');
	    			io.emit('registration', { name: $('#user_name').val(), email: $('#reg_email').val(), password: $('#reg_password').val(), password_confirm: $('#password_confirm').val() });
	    		});

	    		// $('home_button').click(function(){

	    		// })

	    		// $('question_button').click(function(){

	    		// })

	    		$('#asked_button').unbind().click(function(){
	    			$('#asked-tabled').slideToggle();
	    		})

	    		$('#answered_button').unbind().click(function(){
	    			$('#answered-tabled').slideToggle()
				});
			};
				$('#login_reg').hide();
	    		$('#answered-tabled').hide();
	    		$('#asked-tabled').hide();	
		    // END OF JQUERY
		});
		// 	$scope.questions = pubpinFactory.get_questions();
		// 	$scope.add_answer = function(answer, question_id){
		// 		pubpinFactory.add_answer(answer.response, question_id.asdfasfasd)
		// 	};
		// 	$scope.add_user = function(){
		// 		pubpinFactory.add_user($scope.new_user);
		// 	};

		//FACTORY
		// pubpinion.factory('pubpinFactory', function(){
		// 	var factory = {};
		// 	var questions = [
		// 	{question: 'Is this really a question generated with angular??', img: '' }];
		// 	factory.get_questions = function(){ 
		// 		console.log('loggin in the factory.get_questions');
		// 	};
		// 	factory.add_answer = function(){};
		// 	factory.add_user = function(new_user){
		// 		var user = new User({name: new_user.user_name, email: new_user.reg_email, })
		// 	};

		// 	return factory;
		// });	

	</script>
</body>
</html>