<html>
<head>
	<title>PubPinion - Home</title>
	<link rel="stylesheet" type="text/css" href="/stylesheets/style.css">
	<link rel="stylesheet" type="text/css" href="/stylesheets/style2.css">
	<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.9/angular.min.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.5/angular-route.min.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>    
	<script src="/socket.io/socket.io.js"></script>

</head>
<body>
	<div ng-app='pubpinion'>

		<div id="menu">
			<button id="home_button">?ubPinoin.com</button>
			<button id="myPub">My?ub</button>
			<div id="errors"></div>
		</div>

		<div id="ng-view" ng-view=""></div>

	</div>
	<script type="text/javascript">
		io = io.connect();
		var pubpinion = angular.module('pubpinion', ['ngRoute']);
		var user_info = {};
		//EXPRESS.IO
		//SUCCESS registration
		io.on('successful_reg', function(user){
			user_info = user;
			console.log('USER_INFO: ', user_info)
			$('#errors').unbind().html("");
			location.hash="#/myPub";
			$('#user_name').unbind().html("Welcome, "+user.name);
			$('#welcome_heading').unbind().fadeIn().unbind().html("<h3>You are about to embark on a journey of unabashedly honest feedback.<br>Let's get your started.<br><br>A.) Your ?ub's are your public posts. Any user who's lucky enough to log on around the time you post it will get the chance to tell you what they think.<br><br>B.) Your 'Pinions are a record of your answers to other users ?ub's.<br><br>Now, let's submit your first 'Pinions and get this party started.</h3>");
			$('#hide_instructions_button').slideDown();
		});

		//SUCCESS login
		io.on('successful_login', function(user){
			user_info = user;
			console.log('successful_login, user_info is: ', user_info);
			$('#errors').unbind().html("");
			location.hash="#/myPub";
			$('#user_name').fadeIn().html("Welcome, "+user.name+".");
			$('#welcome_heading').fadeIn().html("<h3>Good to see you, buddy ;)</h3>");
			$('#hide_instructions_button').slideDown();
			for(var i in user.user_questions){
				$('#asked_table_tbody').append(
				"<tr><td>"+user.user_questions[i].question+"</td><td>"+user.user_questions[i].image+"</td></tr>");
			};
    	});

		//FAIL
		io.on('failed_reg', function(err){
			console.log('ERRORS', err);
			if(typeof(err) != 'undefined'){
				$('#errors').unbind().slideUp().html("");
				for(var x in err.error.errors){
					$('#errors').unbind().append("<p>"+err.error.errors[x].message+"</p>").slideDown();
				};
			};
	    });

		//FAIL
	    io.on('failed_login', function(fail_message){
	    	$('#errors').unbind().slideUp().html("<p>"+fail_message.fail_message+"</p>").slideDown().fadeIn();
	    	console.log(fail_message);
	    });

	    io.on('retrieved_question', function(question1){
	    	//console.log(question1);
	    	var i = Math.floor((Math.random() * question1.question1.length) + 0);
	    		$('#question_title').unbind().append(question1.question1[i].question);
	    		$('#question_results').unbind().append(question1.question1[i].yes);
	    		//console.log(question1.question1[i].question);
	    		console.log(question1);
	    	//}
	    		// for(var i in question1.question1){
	    		// console.log(question1.question1[i].question);
	    		// };
	    });
	    io.on('failed_to_get_question', function(message){
	    	console.log('failed to retrieve question');
	    		$('#question_title').append(message);
	    });
	    io.on('posted_question', function(question){
	    	$('#question-box').fadeIn();
	    	console.log('this is the info for the last_question box',question.question, question.image);
	    	$('#last_question_question').unbind().html(question.question);
	    	$('#last_question_image').unbind().html(question.image);
	    	$('#last_question').fadeIn();
	    });

		//END EXPRESS.IO

		//ROUTES
		pubpinion.config(function($routeProvider){
			$routeProvider
			.when('/', 
				{templateUrl: '/partials/home.html', controller: 'pubpinController'})
			.when('/post_question', 
				{templateUrl: '/partials/post_question.html', controller: 'pubpinController'})
			.when('/myPub', 
				{templateUrl: '/partials/myPub.html', controller: 'pubpinController'})
			.when('/myQuestions', 
				{templateUrl: '/partials/myQuestions.html', controller: 'pubpinController'})
		});
		
		// CONTROLLERS
		pubpinion.controller('pubpinController', function($scope){

			//JQUERY
			var loaded = false;
			$(document).ready(function(){
					if(loaded === false){
						loaded = true;
						first_setup();
					}

				io.emit('load_questions');
	    		
	    	});

			function first_setup(){

				io.emit('load_questions');

				//My?ub button sends to My?ub partial
				$('#myPub').unbind().click(function(){
					location.hash="#/myPub";
					console.log(user_info);
				});

				//sends to home partial
				$('#home_button').unbind().click(function(){
					location.hash="#/";
				});

				//displays login/registration fields
	    		$('#show_login_reg_button').unbind().click(function(){
	    			$('#login_reg').unbind().slideToggle();
	    			$('#show_login_reg_button').unbind().fadeOut();
	    		});

	    		//login
	    		$('#login_button').unbind().click(function(){
	    			io.emit('login', { email: $('#login_email').val(), password: $('#login_password').val() });
	    			console.log('login_button was clicked: ');
	    		});

	    		//registration
	    		$('#reg_button').unbind().on('click', function(){
	    			console.log('reg_button was clicked: ');
	    			io.emit('registration', { name: $('#user_name').val(), email: $('#reg_email').val(), password: $('#reg_password').val(), password_confirm: $('#password_confirm').val() });
	    		});

	    		//post a question from My?ub
	    		$('#post_question_button').unbind().click(function(){

	    			console.log('post_question_button was clicked and submitted this info: ASKED QUESTION: ',$('#asked_question').val(),
	    				"MAYBE: ", $('#maybe').val(),
	    				"IMAGE: ",$('#image_file').val(),
	    				"USER MAIL: ", user_info.mail,
	    				"USER NAME: ", user_info.name);

	    			io.emit('post_question', {question: $('#asked_question').val(), maybe: $('#maybe').val(), image: $('#image_file').val(), user_mail: user_info.mail, user_name: user_info.name });
	    			$('#question-box').fadeOut();
	    		});

	    		
	    		//displays asked questions table
	    		$('#asked_button').unbind().click(function(){
	    			$('#asked-tabled').slideToggle();
	    		})

	    		//displays answered questions table
	    		$('#answered_button').unbind().click(function(){
	    			$('#answered-tabled').slideToggle()
				});

	    		//'Got it' button hides welcome message
				$('#hide_instructions_button').click(function(){
					$('#welcome_heading').slideUp();
					$('#hide_instructions_button').fadeOut();
				})

				//vote buttons
				$('#yes').click(function(){
					//io.emit('yes', {yes: yes});
					$('#yes').hide();
					$('#no').hide();
					$('#question_results').show();
				})
				$('#no').click(function(){
					//io.emit('yes', {yes: yes});
					$('#yes').hide();
					$('#no').hide();
					$('#question_results').show();
				})
			};
				//initially hidden
				$('#login_reg').hide();
	    		$('#answered-tabled').hide();
	    		$('#asked-tabled').hide();
	    		$('#welcome_heading').hide();
	    		$('#hide_instructions_button').hide();	
	    		$('#last_question').hide();
	    		$('#errors').hide();
	    		$('#question_results').hide();

		    // END OF JQUERY
		 //    $scope.questions = pubpinFactory.get_questions();
			// $scope.user_answered_questions = pubpinFactory.get_user_answered_questions();
		 //    $scope.user_asked_questions = pubpinFactory.get_user_asked_questions();
		});


		// //FACTORY
		// pubpinion.factory('pubpinFactory', function(){

		// 	var factory = {};
		// 	var questions = [{}];
		// 	var user_answered_questions = [{}];
		// 	var user_asked_questions = [{}];

		// 	factory.get_user_answered_questions = function(){
		// 		console.log('get_user_answered_questions was activated');
		// 		console.log(user_info);
		// 		questions.find({user_name: user_info.name, user_mail: user_info.mail})
		// 	};
		// 	factory.get_user_ansked_questions = function(){
		// 		console.log('get_user_ansked_questions was activated');
		// 		console.log(user_info);
		// 		questions.find({user_name: user_info.name, user_mail: user_info.mail})
		// 	};
		// 	factory.get_questions = function(){ 
		// 		console.log('factory.get_questions was activated');
		// 		questions.find({});
		// 	};

		// 	return factory;
		// });	

	</script>
</body>
</html>